name: Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - "*"
  # Allow manually triggering the workflow.
  workflow_dispatch:

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  php-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      COMPOSER_NO_INTERACTION: 1

    strategy:
      matrix:
        php: ['8.3', '8.2', '8.1', '8.0', '7.4', '7.3', '7.2', '7.1', '7.0', '5.6', '5.5', '5.4']
        dependency-version: ['prefer-stable']
        experimental: [false]

        include:
          - php: '7.2'
            dependency-version: 'prefer-lowest'
            experimental: false
          - php: '7.3'
            dependency-version: 'prefer-lowest'
            experimental: false
          - php: '7.4'
            dependency-version: 'prefer-lowest'
            experimental: false
          - php: '8.0'
            dependency-version: 'prefer-lowest'
            experimental: false
          - php: '8.1'
            dependency-version: 'prefer-lowest'
            experimental: false
          - php: '8.2'
            dependency-version: 'prefer-lowest'
            experimental: false
          - php: '8.3'
            dependency-version: 'prefer-lowest'
            experimental: false

          - php: '8.4'
            dependency-version: 'prefer-stable'
            experimental: true

    name: P${{ matrix.php }} - ${{ matrix.dependency-version }}
    continue-on-error: ${{ matrix.experimental }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        ini-values: error_reporting=E_ALL, display_errors=On
        coverage: none
        tools: composer

    # Remove the coding standards package as it has a higher minimum PHP
    # requirement and would prevent running the tests on older PHP versions.
    - name: 'Composer: remove CS dependency'
      run: composer remove --dev --no-update dms/coding-standard --no-interaction

    - name: 'Composer: update PHPUnit for testing lowest (PHP 7.2)'
      if: ${{ matrix.dependency-version == 'prefer-lowest' && matrix.php == '7.2' }}
      run: composer require --no-update phpunit/phpunit:"^8.0" --no-interaction

    - name: 'Composer: update PHPUnit for testing lowest (PHP 7.3+)'
      if: ${{ matrix.dependency-version == 'prefer-lowest' && matrix.php != '7.2' }}
      run: composer require --no-update phpunit/phpunit:"^9.0" --no-interaction

    - name: Install dependencies - normal
      if: ${{ matrix.php < 8.4 }}
      run: |
        composer update --${{ matrix.dependency-version }} --prefer-dist --no-progress --no-interaction

    - name: Install dependencies - ignore platform reqs
      if: ${{ matrix.php >= 8.4 }}
      run: |
        composer update --${{ matrix.dependency-version }} --prefer-dist --no-progress --ignore-platform-req=php+ --no-interaction

    - name: Migrate PHPUnit configuration if possible
      run: vendor/bin/phpunit --migrate-configuration || echo '--migrate-configuration not available'

    - name: Execute Unit Tests
      run: vendor/bin/phpunit

  test-phar:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          # Test against the high/low supported PHP-PHPUnit combinations.

          # PHPUnit 4 is only supported at the latest version.
          - php: '5.4'
            phpunit: '4'
          - php: '5.5'
            phpunit: '4'

          # PHPUnit 5 is only supported for PHPUnit 5.7.21-latest.
          - php: '5.6'
            phpunit: '5.7.21'
          - php: '5.6'
            phpunit: '5'
          - php: '7.1'
            phpunit: '5.7.21'

          # PHPUnit 6 is fully supported for the officially supported PHP versions.
          - php: '7.0'
            phpunit: '6.4'
          - php: '7.0'
            phpunit: '6'
          - php: '7.2'
            phpunit: '6.4'

          # PHPUnit 7 is fully supported for the officially supported PHP versions.
          # Caveats:
          # - PHPUnit 7.0 seems to have an issue with something related to TestListeners, so using PHPUnit 7.1 instead for "low".
          # - PHPUnit 7 supports PHP 7.3 as of PHPUnit 7.3.0 (for our purposes).
          - php: '7.1'
            phpunit: '7.1'
          - php: '7.1'
            phpunit: '7'
          - php: '7.3'
            phpunit: '7.3'

          # PHPUnit 8 is fully supported for the officially supported PHP versions.
          # Caveats:
          # - PHPUnit 8 supports PHP 8.0 as of PHPUnit 8.5.12 (for our purposes).
          # - PHPUnit 8 supports PHP 8.1 as of PHPUnit 8.5.19 (for our purposes).
          # - PHPUnit 8 supports PHP 8.2 as of PHPUnit 8.5.19 (for our purposes).
          # - PHPUnit 8 supports PHP 8.3 as of PHPUnit 8.5.19 (for our purposes).
          # - PHPUnit 8 supports PHP 8.4 as of PHPUnit 8.5.40 (for our purposes).
          - php: '7.2'
            phpunit: '8'
          - php: '8.0'
            phpunit: '8.5.12'
          - php: '8.4'
            phpunit: '8.5.40'
          - php: '8.4'
            phpunit: '8'

          # PHPUnit 9 is fully supported for the officially supported PHP versions.
          # Caveats:
          # - PHPUnit 9 supports PHP 8.0 as of PHPUnit 9.3.0 (for our purposes).
          # - PHPUnit 9 supports PHP 8.1 as of PHPUnit 9.5.8 (for our purposes).
          # - PHPUnit 9 supports PHP 8.2 as of PHPUnit 9.5.8 (for our purposes).
          # - PHPUnit 9 supports PHP 8.3 as of PHPUnit 9.5.8 (for our purposes).
          # - PHPUnit 9 supports PHP 8.4 as of PHPUnit 9.6.21 (for our purposes).
          - php: '7.3'
            phpunit: '9'
          - php: '8.0'
            phpunit: '9.3.0'
          - php: '8.0'
            phpunit: '9'
          - php: '8.3'
            phpunit: '9.5.8'
          - php: '8.3'
            phpunit: '9'
          - php: '8.4'
            phpunit: '9.6.21'

          # PHPUnit 10 is NOT supported in PHPUnit Polyfills 3.x.

          # PHPUnit 11 is fully supported for the officially supported PHP versions.
          - php: '8.2'
            phpunit: '11'
          - php: '8.3'
            phpunit: '11.0'
          - php: '8.4'
            phpunit: '11.3.6'

          # Experimental builds.
          - php: 'nightly'
            phpunit: '9'
          - php: 'nightly'
            phpunit: '11'

    name: "PHAR test: PHP ${{ matrix.php }} - PHPUnit: ${{matrix.phpunit}}"

    continue-on-error: ${{ matrix.php == '8.4' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          ini-values: zend.assertions=1, error_reporting=-1, display_errors=On
          tools: phpunit:${{ matrix.phpunit }}
        env:
          fail-fast: true

      # Remove PHPUnit from the Composer install as we want to be sure the PHAR file is used.
      - name: 'Composer: remove PHPUnit'
        run: composer remove phpunit/phpunit --no-update --no-interaction

      # Install dependencies and handle caching in one go.
      # @link https://github.com/marketplace/actions/install-php-dependencies-with-composer
      - name: Install Composer dependencies - normal
        if: matrix.php < '8.3'
        uses: "ramsey/composer-install@v3"
        with:
          composer-options: "--no-dev"
          # Bust the cache at least once a month - output format: YYYY-MM.
          custom-cache-suffix: $(date -u "+%Y-%m")

      - name: Install Composer dependencies - ignore PHP restrictions
        if: matrix.php >= '8.3'
        uses: "ramsey/composer-install@v3"
        with:
          composer-options: "--no-dev --ignore-platform-req=php+"
          # Bust the cache at least once a month - output format: YYYY-MM.
          custom-cache-suffix: $(date -u "+%Y-%m")

      - name: Run the unit tests
        if: ${{ ! matrix.coverage }}
        run: phpunit --no-coverage
